from aiogram.types import InlineKeyboardMarkup

from .utils import (
    build_inline_keyboard,
    DeleteOperationCallback,
    ConfirmDeleteOperationCallback,
    DeleteComingCallback,
    ConfirmDeleteComingCallback
)


def create_delete_operation_kb(task_ids: list[str], confirm: bool = False) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ —Å–ø–∏—Å–∫—É task_ids.
    –ï—Å–ª–∏ confirm=True, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ '–£–¥–∞–ª–∏—Ç—å' –∏ '–û—Ç–º–µ–Ω–∞'.
    """
    task_ids_str = ",".join(task_ids) if task_ids else "noop"
    if not confirm:
        items = [(
            "–£–¥–∞–ª–∏—Ç—å üóëÔ∏è",
            f"delete_{task_ids_str}",
            DeleteOperationCallback(task_ids=task_ids_str, delete=True)
        )]
        return build_inline_keyboard(items, adjust=1)
    else:
        items = [
            (
                "–£–¥–∞–ª–∏—Ç—å ‚úÖ",
                f"confirm_delete_{task_ids_str}",
                ConfirmDeleteOperationCallback(task_ids=task_ids_str, confirm_delete=True)
            ),
            (
                "–û—Ç–º–µ–Ω–∞ üö´",
                f"cancel_delete_{task_ids_str}",
                ConfirmDeleteOperationCallback(task_ids=task_ids_str, confirm_delete=False)
            )
        ]
        return build_inline_keyboard(items, adjust=2)


def create_delete_coming_kb(task_ids: list[str], confirm: bool = False) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Ö–æ–¥—è—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ —Å–ø–∏—Å–∫—É task_ids.
    –ï—Å–ª–∏ confirm=True, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ '–£–¥–∞–ª–∏—Ç—å' –∏ '–û—Ç–º–µ–Ω–∞'.
    """
    task_ids_str = ",".join(task_ids) if task_ids else "noop"
    if not confirm:
        items = [(
            "–£–¥–∞–ª–∏—Ç—å üóëÔ∏è",
            f"delete_coming_{task_ids_str}",
            DeleteComingCallback(task_ids=task_ids_str, delete=True)
        )]
        return build_inline_keyboard(items, adjust=1)
    else:
        items = [
            (
                "–£–¥–∞–ª–∏—Ç—å ‚úÖ",
                f"confirm_delete_coming_{task_ids_str}",
                ConfirmDeleteComingCallback(task_ids=task_ids_str, confirm_delete=True)
            ),
            (
                "–û—Ç–º–µ–Ω–∞ üö´",
                f"cancel_delete_coming_{task_ids_str}",
                ConfirmDeleteComingCallback(task_ids=task_ids_str, confirm_delete=False)
            )
        ]
        return build_inline_keyboard(items, adjust=2)